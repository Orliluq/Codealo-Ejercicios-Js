// Números primos son interesantes, dado que podemos encontrarlos utilizando el algoritmo llamado criba de Erastóstenes. Ahora es momento que implementar este algoritmo que hacemos a mano en el colegio con tus nuevas habilidades de programador@

// Implementa una función llamada obtenerPrimos que tome un número de parámetro y regresa un array con todos los números primos desde 1 a `n`.

// Crea aquí tu código
function obtenerPrimos(n) {
    // Inicializar un arreglo de booleanos, asumiendo que todos los números son primos
    var primoArr = new Array(n+1).fill(true);
  
    // Descartar los casos especiales de 0 y 1 que no son primos
    primoArr[0] = false;
    primoArr[1] = false;
  
    // Usar la criba de Eratóstenes para buscar los números primos
    for (var i = 2; i <= Math.sqrt(n); i++) {
      if (primoArr[i]) {
        for(var j = i**2; j <= n; j += i) {
          primoArr[j] = false;
        }
      }
    }
  
    // Recolectar los números primos en un arreglo
    var primos = [];
    for (var i = 2; i <= n; i++) {
      if (primoArr[i]) {
        primos.push(i);
      }
    }
  
    // Regresar el arreglo con los números primos encontrados
    return primos;
  }
  console.log(obtenerPrimos(10));
  console.log(obtenerPrimos(19));

// function obtenerPrimos(max) {
//  var sieve = [], i, j, primos = [];
//  for (i = 2; i <= max; ++i) {
//      if (!sieve[i]) {
//          primes.push(i);
//          for (j = i << 1; j <= max; j += i) {
//              sieve[j] = true;
//          }
//      }
//  }
//  return primos;
